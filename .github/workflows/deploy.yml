name: Build, Push, and Deploy to AKS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      # --- Build and Push each service with caching ---

      - name: Build and push Backend
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.ACR_LOGIN_SERVER }}/backend:latest
          cache-from: type=gha,scope=backend
          cache-to: type=gha,scope=backend,mode=max

      - name: Build and push Frontend
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.ACR_LOGIN_SERVER }}/frontend:latest
          cache-from: type=gha,scope=frontend
          cache-to: type=gha,scope=frontend,mode=max
      
      - name: Build and push Scraper
        uses: docker/build-push-action@v6
        with:
          context: ./scraping2
          push: true
          tags: ${{ secrets.ACR_LOGIN_SERVER }}/scraper:latest
          cache-from: type=gha,scope=scraper
          cache-to: type=gha,scope=scraper,mode=max

      - name: Build and push Predictor
        uses: docker/build-push-action@v6
        with:
          context: ./predictor
          push: true
          tags: ${{ secrets.ACR_LOGIN_SERVER }}/predictor:latest
          cache-from: type=gha,scope=predictor
          cache-to: type=gha,scope=predictor,mode=max
      
      # This step builds the database image needed for the init job
      - name: Build and push Database
        uses: docker/build-push-action@v6
        with:
          context: ./database
          push: true
          tags: ${{ secrets.ACR_LOGIN_SERVER }}/database:latest
          cache-from: type=gha,scope=database
          cache-to: type=gha,scope=database,mode=max

      # --- Terraform Steps ---
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform -chdir=./terraform init

      - name: Terraform Apply
        run: terraform -chdir=./terraform apply -auto-approve

      # --- Kubernetes Steps ---
      - name: Set Kubernetes context
        uses: azure/aks-set-context@v4
        with:
          resource-group: ${{ secrets.AZURE_RESOURCE_GROUP }}
          cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}

      - name: Restart Kubernetes Deployments
        run: |
          kubectl rollout restart deployment/backend-deployment -n bachelor-app
          kubectl rollout restart deployment/frontend-deployment -n bachelor-app
          kubectl rollout restart deployment/scraper-deployment -n bachelor-app
          kubectl rollout restart deployment/predictor-deployment -n bachelor-app