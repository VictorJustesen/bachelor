version: '3.8'

services:
  database:
    build: ./database
    container_name: database-container
    environment:
      - POSTGRES_DB=realestate_db
      - POSTGRES_USER=dev_user
      - POSTGRES_PASSWORD=dev_password
    ports:
      - "5432:5432"  # Expose for development access
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev_user -d realestate_db"]
      interval: 10s
      timeout: 3s
      retries: 5

  # In your docker-compose.yml
  frontend:
    build: ./frontend
    container_name: frontend-container
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/app/src:cached
      - ./frontend/public:/app/public:cached
      - ./frontend/package.json:/app/package.json
    stdin_open: true
    tty: true
    networks:
      - app-network

  backend:
    build: ./backend
    container_name: backend-container
    environment:
      - SCRAPER_SERVICE_URL=http://scraper:9000
      - PREDICTOR_SERVICE_URL=http://predictor:8001
      - ENVIRONMENT=dev
      - DB_HOST=database
      - DB_PORT=5432
      - DB_NAME=realestate_db
      - DB_USER=dev_user
      - DB_PASSWORD=dev_password
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm run dev
    depends_on:
      database:
        condition: service_healthy
    networks:
      - app-network

  api-gateway:
    build: ./gateway
    container_name: gateway-container
    ports:
      - "80:80"  # Only gateway is exposed
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

  scraper:
    build: ./scraping2
    container_name: scraper-container
    networks:
      - app-network

  predictor:
    build:
      context: .
      dockerfile: predictor/Dockerfile
    container_name: predictor-container
    ports:
      - "8001:8001"  # Add this line to expose the port
    networks:
      - app-network
    environment:
      # This is the crucial line that fixes the ModuleNotFoundError
      - PYTHONPATH=/app/automltrainer_lib
    

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: